package edu.utdallas.videoOnDemand.services;

import static org.junit.Assert.assertNotNull;

import java.util.List;
import java.util.Random;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import edu.utdallas.videoOnDemand.userManagementSvc.UserDTO;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "serviceContext.xml" })
public class UserMngtServiceImplTestCase {
	@Autowired
	private UserManagementService userManagementSvc;

	@Test
	public void testWiring() {
		assertNotNull(userManagementSvc);
	}

	@Test
	public void testAddUser() throws Exception {
		UserDTO userDTO = buildUserDTO();
		userManagementSvc.addUser(userDTO);
	}

	@Test
	public void validateUser() throws Exception {

	}

	@Test
	public void retrieveUserInfo_1() {

	}

	@Test
	public void retrieveUserInfo_2() {

	}

	@Test
	public void updateUser() throws Exception {
		UserDTO userDTO = buildNewUserDTOForUpdate();
		userManagementSvc.updateUser(userDTO);
		;
		// assertNotNull(userDTO.getUserID());
		System.out.println("Update User ID " + userDTO.getUserID());
	}

	@Test
	public void retrieveAllUsers() throws Exception {
		List<UserDTO> userList = userManagementSvc.retrieveAllUsers();
		System.out.println("testRetrieveAllUsers");
	}

	@Test
	public void login() throws Exception {
		String username = "lei";
		String password = "lei";
		boolean login = userManagementSvc.login(username, password);
		System.out.println("test--Login for " + username + " with password:"
				+ password + " and the login result: "
				+ Boolean.toString(login));
	}

	@Test
	public void authenticate() {

	}

	private UserDTO buildUserDTO() {
		Random random = new Random();
		int val = random.nextInt();

		UserDTO result = new UserDTO();
		result.setFirst_name("Fred");
		result.setLast_name("Flintstone" + val);
		result.setEmail("fred" + val + "@gmail.com");
		result.setUsername("theFred" + val);
		result.setPassword("password");
		result.setIsAdmin("0");
		result.setIsActive("1");
		return result;
	}

	private UserDTO buildNewUserDTOForUpdate() {
		Random random = new Random();
		int val = random.nextInt();

		UserDTO result = new UserDTO();
		result.setFirst_name("Fred");
		result.setLast_name("Flintstone" + val);
		result.setEmail("fred" + val + "@gmail.com");
		result.setUsername("theFred" + val);
		result.setPassword("password");
		result.setIsAdmin("0");
		result.setIsActive("1");

		result.setUserID(new Long(2));
		return result;
	}
}
